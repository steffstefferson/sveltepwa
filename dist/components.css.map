{
  "version": 3,
  "file": "components.css",
  "sources": [
    "..\\App.svelte",
    "..\\Facts.svelte",
    "..\\Images.svelte",
    "..\\ImageFullScreen.svelte",
    "..\\Fact.svelte",
    "..\\Image.svelte",
    "..\\ManageContribution.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import Facts from './components/Facts.svelte';\r\n  import Images from './components/Images.svelte';\r\n  import Login from './components/Login.svelte';\r\n  import ImageFullScreen from './components/ImageFullScreen.svelte';\r\n  import HeaderTopBar from './components/HeaderTopBar.svelte';\r\n  import Contribution from './components/Contribution.svelte';\r\n  import ManageContribution from './components/ManageContribution.svelte';\r\n  import Notification from './components/Notification.svelte';\r\n  import router from \"page\"\r\n  import { DenseFixedAdjust} from '@smui/top-app-bar';\r\n\r\n  if ('serviceWorker' in navigator) {\r\n      //navigator.serviceWorker.register('/service-worker.js');\r\n    }\r\n  let page\r\n  let params\r\n  \r\n  router('/facts', () => page = Facts)\r\n  router('/login', () => page = Login)\r\n  router('/contribute', () => page = Contribution)\r\n  router('/admin/contributions', () => page = ManageContribution)\r\n  router('/facts/:factKey', (ctx, next) => {\r\n      params = ctx.params\r\n      next()\r\n    }, \r\n    () => page = ImageFullScreen)\r\n  router('/images', () => page = Images)\r\n  router('/images/:imageKey', (ctx, next) => {\r\n      params = ctx.params\r\n      next()\r\n    }, \r\n    () => page = ImageFullScreen)\r\n  router('/*', () => page = Facts)\r\n  router.start()\r\n</script>\r\n\r\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\">\r\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,600,700\">\r\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto+Mono\">\r\n\r\n<style>:global(body){background-color:#f8f8f8;margin:0}:global(.formButton){margin-top:20px;margin-left:10px;float:right}:global(app,body,html){display:block!important;height:auto!important;width:auto!important;position:static!important;font-family:Roboto,sans-serif}\n/*# sourceMappingURL=src/App.svelte.map */</style>\r\n<HeaderTopBar></HeaderTopBar>\r\n<main class=\"overflow-hidden\" DenseFixedAdjust>\r\n    <svelte:component this={page} params={params} />\r\n</main>\r\n<Notification></Notification>\r\n",
    "<script>\r\n  import { svelteFactStore, deleteFact  } from './../services/factsService';\r\n  import { notify  } from './../services/notifyService';\r\n  import Fact from './Fact.svelte';\r\n  import Button, {Label} from '@smui/button';\r\n  import { userStore } from './../services/loginService.js';\r\n   import Kitchen from '@smui/snackbar/kitchen/index';\r\n\r\n  let loggedIn = false;\r\n  userStore.subscribe(user => {\r\n\t\tloggedIn = user.loggedIn;\r\n  });\r\n  \r\n  let kitchen;\r\n\r\n  function onDeleteFact(event){\r\n    return pushToKitchen(event.detail.fact);\r\n  }\r\n\r\nfunction deleteFactSerious(fact){\r\n    deleteFact(fact).then(success => {\r\n        if(success){\r\n          notify('fact was deleted');\r\n        }else{\r\n          notify('something went wrong while deleting the fact');\r\n        }\r\n    });\r\n}\r\n\r\n\r\n  function pushToKitchen(fact) {\r\n    kitchen.push({\r\n      props: {\r\n        variant: 'stacked'\r\n      },\r\n      label: 'Do you really want to delete this fact?',\r\n      actions: [\r\n        {\r\n          onClick: () => deleteFactSerious(fact),\r\n          text: 'Yes, please'\r\n        },\r\n        {\r\n          text: 'Nope'\r\n        }\r\n      ],\r\n      dismissButton: false\r\n    });\r\n  }\r\n\r\n</script>\r\n\r\n<style type=\"text/postcss\">.list{display:flex;flex-wrap:wrap;justify-content:space-evenly}.list-item{display:flex;padding:.5em;width:350px;flex-grow:1}.list-content{background-color:#fff;display:flex;flex-direction:column;padding:1em;width:100%}.list-content p{flex:1 0 auto}[dir=ltr] ul{padding-left:5px}[dir=rtl] ul{padding-right:5px}\n/*# sourceMappingURL=src/components/Facts.svelte.map */</style> \r\n<div style=\"height: 50px;\">\r\n    <Button href=\"/contribute\"\r\n    variant=\"raised\"\r\n    class=\"formButton\">\r\n      <Label>Contribute your own fact</Label>\r\n    </Button>\r\n    </div>\r\n<div>\r\n  <ul class=\"list\">\r\n  {#each $svelteFactStore as fact}\r\n  <li class=\"list-item\">\r\n  <Fact fact={fact} hasDeleteButton=\"{loggedIn}\" hasAcceptButton=\"{false}\" on:delete=\"{onDeleteFact}\" class=\"list-content\"></Fact>\r\n  </li>\r\n  {/each}\r\n  </ul>\r\n</div>\r\n\r\n<Kitchen bind:this={kitchen} dismiss$class=\"material-icons\" />\r\n",
    "<script>\r\n  import { getImages } from \"../services/imageSerivce.js\"\r\n  import Image from './Image.svelte';\r\n\r\nconst localStore = getImages();\r\n\r\n</script>\r\n\r\n<style type=\"text/postcss\">.list{display:flex;flex-wrap:wrap;justify-content:space-evenly}.list-item{display:flex;padding:.5em;width:300px}.list-content{background-color:#fff;display:flex;flex-direction:column;padding:1em;width:100%}.list-content p{flex:1 0 auto}\n/*# sourceMappingURL=src/components/Images.svelte.map */</style>\r\n<div>\r\n  <div>\r\n  Images:\r\n  <ul class=\"list\">\r\n  {#each $localStore as image}\r\n  <li class=\"list-item\">\r\n  <Image image={image} class=\"list-content\"></Image>\r\n  </li>\r\n  {/each}\r\n  </ul>\r\n  </div>\r\n</div>\r\n",
    "<script>\nimport {getImage} from \"../services/imageSerivce.js\"\nimport { getDisplayTime } from \"../services/displayTime.js\";\n\nexport let params;\n\nlet showText = true;\nconsole.log(params);\nlet backgroundStyle = \"\";\nlet image = load(params.imageKey,0);\nlet backUrl = \"/images\";\n\nfunction toggleText(){\n    showText = !showText;\n}\n\nfunction getPreviousImage(e){\n    image = load(image.imageKey,-1);\n}\n\nfunction getNextImage(e){\n    image = load(image.imageKey,1);\n}\n\nfunction load(imageKey,offset){\n    const img = getImage(imageKey,offset);\n    backgroundStyle = \"background-image: url(\"+(img.fullImageSizeUrl || img.thumbnail)+\")\";\n    if(!img.fullImageSizeUrl){\n    img.loadFullSizeImage().then((fullSizeImageUrl) =>{\n        backgroundStyle = \"background-image: url(\"+fullSizeImageUrl+\")\";\n    });\n    }\n    return img;\n}\n\n</script>\n<div class=\"container\" style=\"{backgroundStyle}\">\n    <div class=\"showHideInfoArea\" on:mousedown=\"{toggleText}\" on:mouseup=\"{toggleText}\"> </div>\n    <div class=\"textContainer\" style=\"visibility: {showText ? 'inherit' : 'hidden'}\">\n        <button on:click=\"{getPreviousImage}\">back</button>\n        <div>\n            <div>\n                <span class=\"title\">{ image.imageTitle }</span>\n                <span>{ getDisplayTime(image.insertTime) }</span>\n                <a href=\"{backUrl}\">x</a>\n            </div>\n            <div class=\"text\">{ image.funFact }</div>\n            <div class=\"subtitle\"></div>\n        </div>\n        <button on:click=\"{getNextImage}\">next</button>\n    </div>\n    \n</div>\n\n<style>.container{background-position:50%;background-repeat:no-repeat;background-size:cover;height:100%;position:absolute;top:0}.textContainer{background-color:#ff0;border:1px solid #000;padding:10px;margin:10px;display:-ms-grid;display:grid;-ms-grid-columns:50px auto 50px;grid-template-columns:50px auto 50px}.textContainer div{width:100%}.showHideInfoArea{height:80%;position:absolute;top:20%;border:none;width:100%}.title{font-size:18px}.text{font-size:14px}\n/*# sourceMappingURL=src/components/ImageFullScreen.svelte.map */</style>",
    "<script>\nimport { createEventDispatcher } from 'svelte';\nimport {getDisplayTime} from \"../services/displayTime.js\"\n import Card from '@smui/Card';\nimport Button,{Label} from '@smui/Button';\n\nexport let fact;\nexport let hasDeleteButton;\nexport let hasAcceptButton;\n\nconst dispatch = createEventDispatcher();\n\nfunction deleteFact(){\n\t\tdispatch('delete', {fact});\n}\nfunction acceptFact(){\n\tdispatch('accept', {fact});\n}\n\n</script>\n\n  <div style=\"display: flex; flex-wrap: wrap;\">\n    <div class=\"card-container short factContainer\">\n      <Card style=\"background-color: #ffff65;\" padded>{ fact.fact }\n      <div class=\"factSubtitle\">{ getDisplayTime(fact.insertTime) } | by {fact.contributor}</div>\n      </Card>\n      {#if hasDeleteButton}\n        <Button on:click={deleteFact}\n        variant=\"raised\"\n         class=\"formButton\"\n        >\n        <Label>Delete fact</Label>\n        </Button>\n    {/if}\n          {#if hasAcceptButton}\n        <Button on:click={acceptFact}\n        variant=\"raised\" class=\"formButton\">\n        <Label>Accept fact</Label>\n        </Button>\n    {/if}\n    </div>\n    </div>\n\n\n<style>.factContainer{width:100%;max-width:350px;min-width:350px}.factSubtitle{font-size:12px;text-align:right}\n/*# sourceMappingURL=src/components/Fact.svelte.map */</style>",
    "<script>\nimport {getDisplayTime} from \"../services/displayTime.js\"\nexport let image;\n\nlet landscapeClass = \"portrait\";\n\nfunction imageLoaded(e) {\n   if(e.target.width > e.target.height){\n       landscapeClass = \"landscape\";\n   }\n}\nfunction saveImage(image){\n    localStorage.setItem('currentImage',JSON.stringify(image));\n}\n\n</script>\n\n<div class=\"imageContainer\">\n<a href=\"/images/{image.imageKey}\" on:click=\"{saveImage(image)}\">\n    <div class=\"imageText\">{ image.imageTitle }</div>\n    <div class=\"square\">\n    <img src=\"{image.thumbnail}\" class=\"{landscapeClass}\" on:load=\"{imageLoaded}\" alt=\"{image.funimage}\" />\n    </div>\n    <div class=\"imageText\">{ image.funFact }</div>\n    <div class=\"imageSubtitle\">{ getDisplayTime(image.insertTime) }</div>\n</a>\n</div>\n\n<style>.imageContainer{border:2px solid #b7b3b3;width:100%;margin:5px;padding:15px;background-color:#ffff65;box-shadow:-3px -6px rgba(209,210,183,.18039);font-size:18px}.imageText{width:100%}.imageSubtitle{font-size:12px;float:right}.square{position:relative;width:200px;height:200px;overflow:hidden;margin:auto}img{position:absolute;max-width:100%;width:100%;height:auto;top:50%;left:50%;transform:translate(-50%,-50%)}img.landscape{height:100%;width:auto;-o-object-fit:cover;object-fit:cover}\n/*# sourceMappingURL=src/components/Image.svelte.map */</style>",
    "<script>\r\n  import { svelteFactProposalStore, deleteFactProposal,acceptFactProposal } from './../services/factsService';\r\n  import Fact from './Fact.svelte';\r\n  import Button, {Label} from '@smui/button';\r\n  import { notify  } from './../services/notifyService';\r\n  import { userStore } from './../services/loginService.js';\r\n\r\n  let loggedIn = false;\r\n  userStore.subscribe(user => {\r\n\t\tloggedIn = user.loggedIn;\r\n\t});\r\n\r\nfunction onDeleteFactProposal(event){\r\n  deleteFactProposal(event.detail.fact).then(success => {\r\n      if(success){\r\n        notify('fact was deleted');\r\n      }else{\r\n        notify('something went wrong while deleting the fact');\r\n      }\r\n  })\r\n}\r\n\r\nfunction onAcceptFactProposal(event){\r\n  acceptFactProposal(event.detail.fact).then(success => {\r\n      if(success){\r\n        notify('fact was accepted');\r\n      }else{\r\n        notify('something went wrong while accepting the fact');\r\n      }\r\n  })\r\n}\r\n</script>\r\n<style type=\"text/postcss\">.list{display:flex;flex-wrap:wrap;justify-content:space-evenly}.list-item{display:flex;padding:.5em;width:350px;flex-grow:1}.list-content{background-color:#fff;display:flex;flex-direction:column;padding:1em;width:100%}.list-content p{flex:1 0 auto}[dir=ltr] ul{padding-left:5px}[dir=rtl] ul{padding-right:5px}\n/*# sourceMappingURL=src/components/ManageContribution.svelte.map */</style> \r\n<h1>Manage fact purposals</h1>\r\n<div>\r\n  <ul class=\"list\">\r\n  {#each $svelteFactProposalStore as fact}\r\n  <li class=\"list-item\">\r\n  <Fact fact={fact} hasDeleteButton=\"{loggedIn}\" hasAcceptButton=\"{loggedIn}\" on:delete=\"{onDeleteFactProposal}\"  on:accept=\"{onAcceptFactProposal}\" class=\"list-content\"></Fact>\r\n  </li>\r\n  {/each}\r\n  </ul>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "AAyCe,IAAI,AAAC,CAAC,iBAAiB,OAAO,CAAC,OAAO,CAAC,CAAC,AAAQ,WAAW,AAAC,CAAC,WAAW,IAAI,CAAC,YAAY,IAAI,CAAC,MAAM,KAAK,CAAC,AAAQ,aAAa,AAAC,CAAC,QAAQ,KAAK,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,SAAS,MAAM,UAAU,CAAC,YAAY,MAAM,CAAC,UAAU,CAAC;ACUhP,oBAAK,CAAC,QAAQ,IAAI,CAAC,UAAU,IAAI,CAAC,gBAAgB,YAAY,CAAC,yBAAU,CAAC,QAAQ,IAAI,CAAC,QAAQ,IAAI,CAAC,MAAM,KAAK,CAAC,UAAU,CAAC,CAAC;AC3C5H,mBAAK,CAAC,QAAQ,IAAI,CAAC,UAAU,IAAI,CAAC,gBAAgB,YAAY,CAAC,wBAAU,CAAC,QAAQ,IAAI,CAAC,QAAQ,IAAI,CAAC,MAAM,KAAK,CAAC;AC8CpI,sCAAU,CAAC,oBAAoB,GAAG,CAAC,kBAAkB,SAAS,CAAC,gBAAgB,KAAK,CAAC,OAAO,IAAI,CAAC,SAAS,QAAQ,CAAC,IAAI,CAAC,CAAC,0CAAc,CAAC,iBAAiB,IAAI,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,OAAO,IAAI,CAAC,QAAQ,QAAQ,CAAC,QAAQ,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,4BAAc,CAAC,iBAAG,CAAC,MAAM,IAAI,CAAC,6CAAiB,CAAC,OAAO,GAAG,CAAC,SAAS,QAAQ,CAAC,IAAI,GAAG,CAAC,OAAO,IAAI,CAAC,MAAM,IAAI,CAAC,kCAAM,CAAC,UAAU,IAAI,CAAC,iCAAK,CAAC,UAAU,IAAI,CAAC;ACVvc,4BAAc,CAAC,MAAM,IAAI,CAAC,UAAU,KAAK,CAAC,UAAU,KAAK,CAAC,2BAAa,CAAC,UAAU,IAAI,CAAC,WAAW,KAAK,CAAC;AChBxG,8BAAe,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,GAAG,CAAC,QAAQ,IAAI,CAAC,iBAAiB,OAAO,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,IAAI,CAAC,yBAAU,CAAC,MAAM,IAAI,CAAC,6BAAc,CAAC,UAAU,IAAI,CAAC,MAAM,KAAK,CAAC,sBAAO,CAAC,SAAS,QAAQ,CAAC,MAAM,KAAK,CAAC,OAAO,KAAK,CAAC,SAAS,MAAM,CAAC,OAAO,IAAI,CAAC,kBAAG,CAAC,SAAS,QAAQ,CAAC,UAAU,IAAI,CAAC,MAAM,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,GAAG,CAAC,UAAU,UAAU,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,yBAAU,CAAC,OAAO,IAAI,CAAC,MAAM,IAAI,CAAC,cAAc,KAAK,CAAC,WAAW,KAAK,CAAC;ACInd,mBAAK,CAAC,QAAQ,IAAI,CAAC,UAAU,IAAI,CAAC,gBAAgB,YAAY,CAAC,wBAAU,CAAC,QAAQ,IAAI,CAAC,QAAQ,IAAI,CAAC,MAAM,KAAK,CAAC,UAAU,CAAC,CAAC"
}