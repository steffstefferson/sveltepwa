{
  "version": 3,
  "file": "components.css",
  "sources": [
    "..\\App.svelte",
    "..\\Facts.svelte",
    "..\\Images.svelte",
    "..\\Map.svelte",
    "..\\Home.svelte",
    "..\\FullScreenMenu.svelte",
    "..\\ImageFullScreenSwipe.svelte",
    "..\\ManageContribution.svelte",
    "..\\Fact.svelte",
    "..\\Image.svelte",
    "..\\ImageFullScreen.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import \"./App.scss\";\r\n  import Facts from \"./components/Facts.svelte\";\r\n  import Images from \"./components/Images.svelte\";\r\n  import Map from \"./components/Map.svelte\";\r\n  import Home from \"./components/Home.svelte\";\r\n  import Settings from \"./components/Settings.svelte\";\r\n  import Login from \"./components/Login.svelte\";\r\n  import FullScreenMenu from \"./components/FullScreenMenu.svelte\";\r\n  import ImageFullScreenSwipe from \"./components/ImageFullScreenSwipe.svelte\";\r\n  import ShareApiTest from \"./components/ShareApiTest.svelte\";\r\n  import Contribution from \"./components/Contribution.svelte\";\r\n  import ManageContribution from \"./components/ManageContribution.svelte\";\r\n  import Notification from \"./components/Notification.svelte\";\r\n  import router from \"page\";\r\n\r\n  let page;\r\n  let params = {};\r\n\r\n  router(\"/login\", () => (page = Login));\r\n  router(\"/home\", () => (page = Home));\r\n  router(\"/settings\", () => (page = Settings));\r\n  router(\"/contribute\", () => (page = Contribution));\r\n  router(\"/contributions\", () => (page = ManageContribution));\r\n  router(\"/addImage\", () => (page = AddPlaceToBe));\r\n  router(\"/shareApiTest\", () => (page = ShareApiTest));\r\n\r\n  router(\"/facts\", () => (page = Facts));\r\n  router(\r\n    \"/facts?key=:factKey\",\r\n    (ctx, next) => {\r\n      params = ctx.params;\r\n      next();\r\n    },\r\n    () => (page = Facts)\r\n  );\r\n\r\n  router(\"/map\", () => (page = Map));\r\n  router(\"/images\", () => (page = Images));\r\n\r\n  router(\r\n    \"/slideShow\",\r\n    (ctx, next) => {\r\n      params = ctx.querystring.split(\"&\").reduce((red, keyval) => {\r\n        let [key, val] = keyval.split(\"=\");\r\n        red[key] = val;\r\n        return red;\r\n      }, {});\r\n      next();\r\n    },\r\n    () => (page = ImageFullScreenSwipe)\r\n  );\r\n\r\n  router(\"/*\", () => (page = Home));\r\n  router.start();\r\n\r\n  let menuOpened = false;\r\n  function menuOpen() {\r\n    menuOpened = !menuOpened;\r\n  }\r\n</script>\r\n\r\n<style>:global(body){margin:0}:global(.formButton){margin-top:20px;margin-left:10px;float:right}:global(.contentpadding){padding:0 20px}:global(.mdc-top-app-bar){height:50px}:global(app,body,html){display:block!important;height:auto!important;width:auto!important;position:static!important;font-family:Roboto,sans-serif}\n/*# sourceMappingURL=src/App.svelte.map */</style>\r\n\r\n<FullScreenMenu on:message={menuOpen} />\r\n<main class=\"mainContainer\" style={menuOpened ? 'display:none' : ''}>\r\n  <svelte:component this={page} {params} />\r\n</main>\r\n<Notification />\r\n",
    "<script>\r\n  import {\r\n    deleteFact,\r\n    subscribeToFacts\r\n  } from \"./../services/factsWrapperService.js\";\r\n  import Dialog, { Title, Content, Actions, InitialFocus } from \"@smui/dialog\";\r\n  import { notify, ask } from \"./../services/notifyService\";\r\n  import Fact from \"./Fact.svelte\";\r\n  import Button, { Label } from \"@smui/button\";\r\n  import { userStore } from \"./../services/loginWrapperService.js\";\r\n  import page from \"page\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  onMount(async function() {\r\n    var s = await subscribeToFacts();\r\n    s.subscribe(x => {\r\n      facts = x;\r\n    });\r\n  });\r\n\r\n  let facts = [];\r\n  export let params;\r\n  let selectedFactDialog;\r\n  let selectedFact = null;\r\n  let loggedIn = false;\r\n  userStore.subscribe(user => {\r\n    loggedIn = user.loggedIn;\r\n  });\r\n\r\n  async function onDeleteFact(event) {\r\n    let ok = await ask(\"Do you really want to delete this fact?\");\r\n    if (ok) {\r\n      deleteFactSerious(event.detail);\r\n    }\r\n  }\r\n\r\n  function deleteFactSerious(fact) {\r\n    deleteFact(fact).then(success => {\r\n      if (success) {\r\n        notify(\"fact was deleted\");\r\n      } else {\r\n        notify(\"something went wrong while deleting the fact\");\r\n      }\r\n    });\r\n  }\r\n\r\n  if (params.factKey) {\r\n    svelteFactStore.subscribe(facts => {\r\n      selectedFact = facts.filter(x => (x.key = params.factKey))[0];\r\n      if (selectedFact) {\r\n        selectFact(selectedFact);\r\n      }\r\n    });\r\n  }\r\n\r\n  function selectFact(fact) {\r\n    selectedFact = fact;\r\n    selectedFactDialog.open();\r\n    page(\"/facts?key=\" + selectedFact.key);\r\n  }\r\n</script>\r\n\r\n<style type=\"text/postcss\">.list{display:flex;flex-wrap:wrap;justify-content:space-evenly}.list-item{display:flex;padding:0 20px 25px;max-width:400px;min-width:300px;flex:1 1 0px}[dir=ltr] ul{padding-left:5px}[dir=rtl] ul{padding-right:5px}\n/*# sourceMappingURL=src/components/Facts.svelte.map */</style>\r\n\r\n<div class=\"contentpadding\">\r\n  <div style=\"height: 60px;\">\r\n    <Button href=\"/contribute\" variant=\"raised\" class=\"formButton\">\r\n      <Label>Contribute your own fact</Label>\r\n    </Button>\r\n  </div>\r\n  <div>\r\n    <ul class=\"list\">\r\n      {#each facts as fact}\r\n        <li class=\"list-item\" on:click={() => selectFact(fact)}>\r\n          <Fact\r\n            {fact}\r\n            hasDeleteButton={loggedIn}\r\n            on:delete={onDeleteFact}\r\n            hasAcceptButton={false} />\r\n        </li>\r\n      {/each}\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<Dialog\r\n  bind:this={selectedFactDialog}\r\n  aria-labelledby=\"list-title\"\r\n  aria-describedby=\"list-content\">\r\n  <Title id=\"list-title\">Fact</Title>\r\n  <Content>\r\n    {#if selectedFact}\r\n      <Fact\r\n        fact={selectedFact}\r\n        hasDeleteButton={false}\r\n        hasAcceptButton={false} />\r\n    {/if}\r\n  </Content>\r\n  <Actions>\r\n    <Button action=\"accept\" variant=\"raised\" class=\"formButton\">\r\n      <Label>Got it!</Label>\r\n    </Button>\r\n  </Actions>\r\n</Dialog>\r\n",
    "<script>\r\n  import {\r\n    subscribeToImages,\r\n    deleteImageAndMetadata\r\n  } from \"./../services/imagesWrapperService.js\";\r\n  import Image from \"./Image.svelte\";\r\n  import { userStore } from \"./../services/loginWrapperService.js\";\r\n\r\n  import { notify, ask } from \"./../services/notifyService.js\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  export let params;\r\n\r\n  let images = [];\r\n\r\n  onMount(async function() {\r\n    console.log(\"images mounted\");\r\n    let imageObservable = await subscribeToImages();\r\n    imageObservable.subscribe(x => {\r\n      images = x;\r\n    });\r\n  });\r\n\r\n  let loggedIn = false;\r\n  userStore.subscribe(user => {\r\n    loggedIn = user.loggedIn;\r\n  });\r\n\r\n  async function onDeleteLocation(event) {\r\n    let ok = await ask(\"Do you really want to delete this location?\");\r\n    if (ok) {\r\n      deleteLocationSerious(event.detail);\r\n    }\r\n  }\r\n\r\n  function deleteLocationSerious(location) {\r\n    deleteImageAndMetadata(location).then(\r\n      () => {\r\n        notify(\"location was deleted\");\r\n      },\r\n      () => {\r\n        notify(\"something went wrong while deleting the location\");\r\n      }\r\n    );\r\n  }\r\n</script>\r\n\r\n<style type=\"text/postcss\">.list{display:flex;flex-wrap:wrap;justify-content:space-evenly}.list-item{display:flex;padding:.5em;width:300px}.list-content p{flex:1 0 auto}\n/*# sourceMappingURL=src/components/Images.svelte.map */</style>\r\n\r\n<div>\r\n  <ul class=\"list\">\r\n    {#each images as image}\r\n      <li class=\"list-item\">\r\n        <Image\r\n          {image}\r\n          hasDeleteButton={loggedIn}\r\n          on:delete={onDeleteLocation} />\r\n      </li>\r\n    {/each}\r\n  </ul>\r\n</div>\r\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { Icon } from \"@smui/icon-button\";\n  import { tick } from \"svelte\";\n  import { subscribeToImages } from \"./../services/imagesWrapperService.js\";\n  import { loadMapScript } from \"./../services/mapsLoaderService.js\";\n  import page from \"page\";\n  export let params;\n  let map;\n  let mapElement;\n  let markers = [];\n  let online = window.navigator.onLine;\n  var loadState = \"\";\n  let addedImagesKeys = [];\n\n  function initMap() {\n    let initialCoords = { lat: 46.65, lng: 7.709 };\n\n    map = new google.maps.Map(mapElement, {\n      center: initialCoords,\n      zoom: 3\n    });\n  }\n\n  function addImageToMap(image) {\n    if (markers.some(x => x.key == image.key)) {\n      return;\n    }\n\n    var marker = new google.maps.Marker({\n      position: { lat: image.location.latitude, lng: image.location.longitude },\n      title: image.imageTitle,\n      map: map,\n      animation: google.maps.Animation.DROP\n    });\n    marker.key = image.key;\n    marker.addListener(\"click\", function() {\n      createInfoWindow(image, marker);\n    });\n    marker.addListener(\"mouseover\", function() {\n      createInfoWindow(image, marker);\n    });\n    markers.push(marker);\n\n    if (params.key == image.key) {\n      createInfoWindow(image, marker);\n    }\n  }\n\n  async function addImagesToMap(images) {\n    while (images.length > 0) {\n      let i = 0;\n      while (images.length > 0 && i++ < 10) {\n        var img = images.pop();\n        if (!addedImagesKeys.find(x => x.key == img.key)) {\n          delayedAdd(img);\n          addedImagesKeys.push(img.key);\n        }\n      }\n    }\n  }\n\n  function delayedAdd(img) {\n    window.setTimeout(function() {\n      addImageToMap(img);\n    }, 1000 + Math.random() * 7000);\n  }\n\n  onMount(async () => {\n    if (!online) {\n      loadState = \"offline\";\n      return;\n    }\n    loadState = \"loading\";\n    waitForMapToLoaded();\n  });\n\n  async function waitForMapToLoaded() {\n    var observer = loadMapScript();\n    observer.subscribe(async loaded => {\n      if (loaded) {\n        loadState = \"loaded\";\n        initMap();\n        (await subscribeToImages()).subscribe(addImagesToMap);\n      }\n    });\n  }\n\n  function getTemplate(image) {\n    return `<div id=\"content\" class=\"markerPopUp\">\n    <h2>${image.imageTitle}</h2>\n    <div>\n    <img src=\"${image.thumbnail}\" alt=\"${image.imageTitle}\" />\n    <p>${image.funFact}</p>\n    </div></div>`;\n  }\n  let infowindow = null;\n  function createInfoWindow(image, marker) {\n    if (infowindow) {\n      infowindow.close();\n    }\n    infowindow = new google.maps.InfoWindow({\n      content: getTemplate(image)\n    });\n    infowindow.open(map, marker);\n    page(\"/map?key=\" + marker.key);\n  }\n\n  window.mapsLoaded = function() {\n    window.googleMapsLoaded = true;\n    console.log(\"maps loaded\");\n  };\n</script>\n\n<style type=\"text/postcss\">.mapContainer{height:calc(100% - 50px);width:100%;position:absolute;left:0}#map{height:100%;width:100%}:global(.markerPopUp){padding:10px;text-align:center;max-width:210px}@media (color-index:48){:global(.gm-style-iw-d){overflow:hidden!important}:global(.gm-style-iw),:global(.gm-style-iw-d){background-color:#000!important}:global(.gm-style-iw-t:after){background:#000!important}}@media (prefers-color-scheme:dark){:global(.gm-style-iw-d){overflow:hidden!important}:global(.gm-style-iw),:global(.gm-style-iw-d){background-color:#000!important}:global(.gm-style-iw-t:after){background:#000!important}}:global(.markerPopUp img){max-height:150px}\n/*# sourceMappingURL=src/components/Map.svelte.map */</style>\n\n{#if loadState == 'loading'}\n  <h1>Waiting for google maps to load....</h1>\n{:else if loadState == 'offline'}\n  <h1>Sorry, Google Maps only work when online!</h1>\n  Go to\n  <a href=\"/images\">Images</a>\n  instead.\n{/if}\n\n<div class=\"mapContainer\">\n  <div id=\"map\" bind:this={mapElement} />\n</div>\n",
    "<script>\r\n  import { subscribeToNewestFacts } from \"./../services/factsWrapperService.js\";\r\n  import { subscribeToNewestImages } from \"./../services/imagesWrapperService.js\";\r\n  import Fact from \"./Fact.svelte\";\r\n  import Image from \"./Image.svelte\";\r\n  import Button, { Label } from \"@smui/button\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  let facts = [];\r\n  let images = [];\r\n\r\n  onMount(async function() {\r\n    let factsObservable = await subscribeToNewestFacts();\r\n    factsObservable.subscribe(x => {\r\n      facts = x;\r\n    });\r\n    let imageObservable = await subscribeToNewestImages();\r\n    imageObservable.subscribe(x => {\r\n      images = x;\r\n    });\r\n  });\r\n</script>\r\n\r\n<style type=\"text/postcss\">.list{display:flex;flex-wrap:wrap;justify-content:space-evenly}.list-item{padding:.5em;max-width:400px}.fact{margin-bottom:20px}#maskedLogo{margin:auto;width:256px;height:115px;background-color:#000;background-color:var(--mdc-theme-on-primary,#000);-webkit-mask-image:url(../assets/lurinfacts-header-transparent.png);mask-image:url(../assets/lurinfacts-header-transparent.png)}\n/*# sourceMappingURL=src/components/Home.svelte.map */</style>\r\n\r\n<div class=\"contentpadding\">\r\n\r\n  <div id=\"maskedLogo\" />\r\n  <div class=\"list\">\r\n    <div class=\"list-item\">\r\n      <h1>Newest facts</h1>\r\n      {#each facts as fact}\r\n        <div class=\"fact\">\r\n          <Fact {fact} hasDeleteButton={false} hasAcceptButton={false} />\r\n        </div>\r\n      {/each}\r\n      <Button href=\"/facts\" variant=\"raised\" class=\"formButton\">\r\n        <Label>Show me all facts</Label>\r\n      </Button>\r\n    </div>\r\n    <div class=\"list-item\">\r\n      <h1>Newest image</h1>\r\n      {#each images as image}\r\n        <Image {image} hasDeleteButton={false} />\r\n      {/each}\r\n      <Button href=\"/images\" variant=\"raised\" class=\"formButton\">\r\n        <Label>Show me all images</Label>\r\n      </Button>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import \"./../App.scss\";\r\n  import page from \"page\";\r\n  import IconButton, { Icon } from \"@smui/icon-button\";\r\n  import { createEventDispatcher } from \"svelte\";\r\n\r\n  import {\r\n    login,\r\n    logout,\r\n    userStore\r\n  } from \"./../services/loginWrapperService.js\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  function deleteLocation(e) {\r\n    e.stopPropagation();\r\n    dispatch(\"delete\", image);\r\n  }\r\n\r\n  let loggedIn = false;\r\n  const unsubscribe = userStore.subscribe(user => {\r\n    loggedIn = user.loggedIn;\r\n  });\r\n  let minimized = true;\r\n\r\n  function checkIsOpened(e) {\r\n    if (minimized) {\r\n      toggleMenu();\r\n      e.preventDefault();\r\n    }\r\n    return false;\r\n  }\r\n  function toggleMenu() {\r\n    minimized = !minimized;\r\n    dispatch(\"message\", minimized);\r\n  }\r\n</script>\r\n\r\n<style type=\"text/postcss\">.pageTitle{color:#000;color:var(--mdc-theme-on-primary,#000)}nav{display:-ms-grid;display:grid;-ms-grid-columns:1px auto 1px;grid-template-columns:1px auto 1px;background-color:#ff0;background-color:var(--mdc-theme-primary,#ff0);height:100vh;padding:15px}nav.minimized{-ms-grid-columns:auto auto auto;grid-template-columns:auto auto auto;height:20px}ul{margin:4px 50px;list-style:none;padding:0 10px;background-color:#ff0;background-color:var(--mdc-theme-primary,#ff0)}nav.minimized ul{width:25px;margin:0}li{text-align:center;padding:10px 20px;margin-bottom:10px;font-size:4vw;transition:1s}nav.minimized ul li{background-color:#000;margin-bottom:0;padding:0}nav.minimized ul>li:nth-child(-n+3){margin-bottom:3px;padding:2px 3px}nav.minimized ul li a{display:none}\n/*# sourceMappingURL=src/components/FullScreenMenu.svelte.map */</style>\r\n\r\n<nav on:click={toggleMenu} class={minimized ? 'minimized' : ''}>\r\n  <div>\r\n    {#if minimized}\r\n      <div class=\"pageTitle\">Lurinfacts beta</div>\r\n    {/if}\r\n  </div>\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        <a on:click={checkIsOpened} href=\"/\">Home</a>\r\n      </li>\r\n      <li>\r\n        <a on:click={checkIsOpened} href=\"/facts\">Facts</a>\r\n      </li>\r\n      <li>\r\n        <a on:click={checkIsOpened} href=\"/images\">Images</a>\r\n      </li>\r\n      <li>\r\n        <a on:click={checkIsOpened} href=\"/map\">Map</a>\r\n      </li>\r\n      <li>\r\n        <a on:click={checkIsOpened} href=\"/settings\">Settings</a>\r\n      </li>\r\n      <li>\r\n        <a on:click={checkIsOpened} href=\"/login\">\r\n          {loggedIn ? 'Logout' : 'Login'}\r\n        </a>\r\n      </li>\r\n      {#if loggedIn}\r\n        <li>\r\n          <a on:click={checkIsOpened} href=\"/contributions\">\r\n            {#if !minimized}\r\n              <Icon class=\"material-icons\">lock</Icon>\r\n            {/if}\r\n            Contributions\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a on:click={checkIsOpened} href=\"/addImage\">\r\n            {#if !minimized}\r\n              <Icon class=\"material-icons\">lock</Icon>\r\n            {/if}\r\n            Add image\r\n          </a>\r\n        </li>\r\n      {/if}\r\n    </ul>\r\n  </div>\r\n  {#if minimized}\r\n    <div style=\"justify-self: end;\">\r\n\r\n      <a\r\n        class=\"twitterLink\"\r\n        target=\"_blank\"\r\n        rel=\"noopener\"\r\n        href=\"https://www.twitter.com/@lurin_tha_one\"\r\n        alt=\"follow Lurin on twitter\">\r\n        <img src=\"./../assets/twitter_logo.png\" alt=\"Twitter Logo\" />\r\n      </a>\r\n\r\n    </div>\r\n  {/if}\r\n</nav>\r\n",
    "<script>\n  import ImageFullScreen from \"./ImageFullScreen.svelte\";\n  import {\n    subscribeToImages,\n    loadFullSizeImage\n  } from \"./../services/imagesWrapperService.js\";\n\n  import { tick, onMount } from \"svelte\";\n  import { notify } from \"./../services/notifyService.js\";\n  import { writable } from \"svelte/store\";\n\n  import page from \"page\";\n  export let params;\n\n  let images = [];\n  let imageRatioContain = false;\n  let slider;\n  let defaultIndex = -1;\n  let backUrl = params.backUrl;\n\n  onMount(async function() {\n    let imageObservable = await subscribeToImages();\n    imageObservable.subscribe(x => {\n      var idx = x.findIndex(y => y.key == params.key);\n      console.log(\"default index is:\", idx);\n      images = x.map(x => {\n        x.url = x.fullImageSizeUrl || x.thumbnail;\n        return x;\n      });\n      if (idx == -1) {\n        idx = 0;\n      } else if (defaultIndex != idx) {\n        defaultIndex = idx;\n        preloadImage(defaultIndex);\n        preloadImage(defaultIndex + 1);\n        preloadImage(defaultIndex - 1);\n      }\n    });\n\n    notify(\"use arrow keys or swipe to navigate between images.\");\n    await tick();\n    slider.scrollLeft = (slider.scrollWidth / images.length) * defaultIndex;\n  });\n\n  function getIndex(idx) {\n    if (idx < 0) {\n      idx = images.length - 1;\n    }\n    if (images.length <= idx) {\n      idx = 0;\n    }\n    return idx;\n  }\n\n  function preloadImage(idx) {\n    idx = getIndex(idx);\n    let i = images[idx];\n    if (!i || i.fullImageSizeUrl) {\n      console.log(i.imageTitle + \" is already preloaded\");\n      return;\n    }\n\n    loadFullSizeImage(i).then(url => {\n      i.fullImageSizeUrl = url;\n      i.url = url;\n      console.log(\"preload ok for: \" + i.imageTitle, idx);\n      images[idx] = Object.assign({}, i);\n    });\n  }\n\n  function sliderScrolled(e) {\n    let width = e.target.scrollWidth / images.length;\n    let idx = Math.round(e.target.scrollLeft / width, 0);\n    if (idx != defaultIndex) {\n      activeChanged(idx);\n    }\n  }\n\n  function imageRatioChanged(e) {\n    imageRatioContain = e.detail.imageRatioContain;\n  }\n\n  function activeChanged(idx) {\n    defaultIndex = idx;\n    console.log(\"activechange to:\", images[idx].imageTitle, idx);\n    tick();\n    page(\"/slideShow?key=\" + images[idx].key);\n    preloadImage(idx + 2);\n    preloadImage(idx + 1);\n    preloadImage(idx - 1);\n    preloadImage(idx - 2);\n  }\n</script>\n\n<style>.slider{display:flex;overflow-x:hidden;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory}.slide,.slider{width:100vw;height:calc(100vh - 50px)}.slide{flex-shrink:0;scroll-snap-align:start}\n/*# sourceMappingURL=src/components/ImageFullScreenSwipe.svelte.map */</style>\n\n<div class=\"slider\" on:scroll={sliderScrolled} bind:this={slider}>\n  {#each images as image}\n    <div class=\"slide\">\n      <ImageFullScreen\n        {backUrl}\n        {image}\n        {imageRatioContain}\n        on:imageratiochanged={imageRatioChanged} />\n    </div>\n  {/each}\n\n</div>\n",
    "<script>\r\n  import {\r\n    getFactsProposals,\r\n    deleteFactProposal,\r\n    acceptFactProposal\r\n  } from \"./../services/factsWrapperService.js\";\r\n  import Fact from \"./Fact.svelte\";\r\n  import Button, { Label } from \"@smui/button\";\r\n  import { notify } from \"./../services/notifyService\";\r\n  import { userStore } from \"./../services/loginWrapperService.js\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  let facts = [];\r\n\r\n  onMount(async function() {\r\n    facts = await getFactsProposals();\r\n  });\r\n\r\n  let loggedIn = false;\r\n  userStore.subscribe(user => {\r\n    loggedIn = user.loggedIn;\r\n  });\r\n\r\n  function onDeleteFactProposal(event) {\r\n    deleteFactProposal(event.detail.fact).then(success => {\r\n      if (success) {\r\n        notify(\"fact was deleted\");\r\n      } else {\r\n        notify(\"something went wrong while deleting the fact\");\r\n      }\r\n    });\r\n  }\r\n\r\n  function onAcceptFactProposal(event) {\r\n    acceptFactProposal(event.detail.fact).then(success => {\r\n      if (success) {\r\n        notify(\"fact was accepted\");\r\n      } else {\r\n        notify(\"something went wrong while accepting the fact\");\r\n      }\r\n    });\r\n  }\r\n</script>\r\n\r\n<style type=\"text/postcss\">.list{display:flex;flex-wrap:wrap;justify-content:space-evenly}.list-item{display:flex;padding:.5em;width:350px;flex-grow:1}.list-content{background-color:#fff;display:flex;flex-direction:column;padding:1em;width:100%}.list-content p{flex:1 0 auto}[dir=ltr] ul{padding-left:5px}[dir=rtl] ul{padding-right:5px}\n/*# sourceMappingURL=src/components/ManageContribution.svelte.map */</style>\r\n\r\n<div class=\"contentpadding\">\r\n  <h1>Manage fact purposals</h1>\r\n  <ul class=\"list\">\r\n    {#each facts as fact}\r\n      <li class=\"list-item\">\r\n        <Fact\r\n          {fact}\r\n          hasDeleteButton={loggedIn}\r\n          hasAcceptButton={loggedIn}\r\n          on:delete={onDeleteFactProposal}\r\n          on:accept={onAcceptFactProposal}\r\n          class=\"list-content\" />\r\n      </li>\r\n    {/each}\r\n  </ul>\r\n</div>\r\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import { getDisplayTime } from \"../services/displayTime.js\";\n  import Card from \"@smui/Card\";\n  import Button, { Label } from \"@smui/button\";\n\n  export let fact;\n  export let hasDeleteButton;\n  export let hasAcceptButton;\n\n  const dispatch = createEventDispatcher();\n\n  function deleteFact(e) {\n    e.stopPropagation();\n    dispatch(\"delete\", { fact });\n  }\n  function acceptFact(e) {\n    e.stopPropagation();\n    dispatch(\"accept\", { fact });\n  }\n</script>\n\n<style>.factContainer{width:100%}.factSubtitle{font-size:12px;text-align:right;padding-top:4px}@media (color-index:48){.factContainer{color:#000}}@media (prefers-color-scheme:dark){.factContainer{color:#000}}\n/*# sourceMappingURL=src/components/Fact.svelte.map */</style>\n\n<div style=\"display: flex; flex-wrap: wrap;width:100%\">\n  <div class=\"card-container short factContainer\">\n    <Card style=\"background-color: #ffff65;\" padded>\n      {fact.fact}\n      <div class=\"factSubtitle\">\n        {getDisplayTime(fact.insertTime)} | by {fact.contributor}\n      </div>\n    </Card>\n    {#if hasDeleteButton}\n      <Button on:click={deleteFact} variant=\"raised\" class=\"formButton\">\n        <Label>Delete fact</Label>\n      </Button>\n    {/if}\n    {#if hasAcceptButton}\n      <Button on:click={acceptFact} variant=\"raised\" class=\"formButton\">\n        <Label>Accept fact</Label>\n      </Button>\n    {/if}\n  </div>\n</div>\n",
    "<script>\n  import { getDisplayTime } from \"../services/displayTime.js\";\n  import { createEventDispatcher } from \"svelte\";\n  import Button, { Label } from \"@smui/button\";\n  import page from \"page\";\n\n  export let image;\n  export let hasDeleteButton;\n\n  let pathName = location.pathname || \"home\";\n  pathName = pathName.indexOf(\"/\") == 0 ? pathName.substring(1) : PathName;\n\n  let landscapeClass = \"portrait\";\n\n  const dispatch = createEventDispatcher();\n\n  function deleteLocation(e) {\n    e.stopPropagation();\n    dispatch(\"delete\", image);\n  }\n\n  function imageLoaded(e) {\n    if (e.target.width > e.target.height) {\n      landscapeClass = \"landscape\";\n    }\n  }\n</script>\n\n<style>.imageContainer{margin:5px;background-color:#ffff65;font-size:18px;border-radius:6px;width:100%}.imageContainer>div{padding:16px}@media (color-index:48){.imageContainer{color:#000}}@media (prefers-color-scheme:dark){.imageContainer{color:#000}}.imageText{width:100%;overflow:auto}.imageSubtitle{font-size:12px;text-align:right}.square{position:relative;width:200px;height:200px;overflow:hidden;margin:6px auto;cursor:pointer}img{position:absolute;max-width:100%;width:100%;height:auto;top:50%;left:50%;transform:translate(-50%,-50%)}img.landscape{height:100%;width:auto;-o-object-fit:cover;object-fit:cover}\n/*# sourceMappingURL=src/components/Image.svelte.map */</style>\n\n<div\n  class=\"imageContainer mdc-card\"\n  on:click={() => page('/slideShow?key=' + image.key + '&backUrl=' + pathName)}>\n  <div>\n    <div class=\"imageText\">{image.imageTitle}</div>\n    <div class=\"square\">\n      <img\n        src={image.thumbnail}\n        class={landscapeClass}\n        on:load={imageLoaded}\n        alt={image.funFact} />\n    </div>\n    <div class=\"imageText\">{image.funFact}</div>\n    <div class=\"imageSubtitle\">{getDisplayTime(image.insertTime)}</div>\n    {#if hasDeleteButton}\n      <Button on:click={deleteLocation} variant=\"raised\" class=\"formButton\">\n        <Label>Delete location</Label>\n      </Button>\n    {/if}\n  </div>\n</div>\n",
    "<script>\n  import IconButton, { Icon } from \"@smui/icon-button\";\n  import { getDisplayTime } from \"../services/displayTime.js\";\n  import { createEventDispatcher } from \"svelte\";\n  import page from \"page\";\n\n  export let image;\n  export let backUrl;\n  export let imageRatioContain = false;\n\n  let showTextContainer = true;\n  let backgroundSize = \"background-size: cover;\";\n  let dispatcher = createEventDispatcher();\n  const canShare = \"canShare\" in navigator;\n\n  function toggleText() {\n    showTextContainer = !showTextContainer;\n  }\n\n  async function shareImage(e) {\n    let response = await fetch(image.fullImageSizeUrl);\n    let data = await response.blob();\n    let metadata = {\n      type: \"image/jpeg\"\n    };\n    let file = new File([data], image.key + \".jpg\", metadata);\n    const files = [file];\n    if (canShare && navigator.canShare({ files })) {\n      try {\n        navigator.share({ files });\n      } catch (ex) {\n        console.log(\"sharerror\", ex);\n      }\n    }\n  }\n\n  function toggleZoom() {\n    imageRatioContain = !imageRatioContain;\n    if (imageRatioContain) {\n      backgroundSize = \"background-size: contain;\";\n    } else {\n      backgroundSize = \"background-size: cover;\";\n    }\n    dispatcher(\"imageratiochanged\", {\n      imageRatioContain: imageRatioContain\n    });\n  }\n</script>\n\n<style>:global(.lurinsnavicons){font-size:25px!important;padding:0;margin:0!important;width:25px;height:30px}.container{height:100%;background-position:50%;background-repeat:no-repeat;width:100%;-ms-grid-rows:auto -webkit-min-content;-ms-grid-rows:auto min-content;grid-template-rows:auto -webkit-min-content;grid-template-rows:auto min-content;display:-ms-inline-grid;display:inline-grid}.textContainer{background-color:#000;background-color:var(--mdc-theme-primary,#000);border:1px solid #000;padding:10px;display:-ms-grid;display:grid;-ms-grid-columns:auto 115px;grid-template-columns:auto 115px;align-items:center;bottom:0}.textContainer div{width:100%}.showHideInfoArea{height:80%;bottom:20%;border:none;width:100%}.title{font-size:20px}.text{font-size:14px}\n/*# sourceMappingURL=src/components/ImageFullScreen.svelte.map */</style>\n\n<div\n  class=\"container\"\n  style=\"background-image: url('{image.url}'); {backgroundSize}\">\n  <div\n    class=\"showHideInfoArea\"\n    on:mousedown={toggleText}\n    on:touchstart={toggleText}\n    on:touchend={toggleText}\n    on:mouseup={toggleText} />\n  <div\n    class=\"textContainer\"\n    style=\"visibility: {showTextContainer ? 'inherit' : 'hidden'}\">\n    <div>\n      <div>\n        <span class=\"title\">{image.imageTitle}</span>\n      </div>\n      <div class=\"text\">{image.funFact}</div>\n      <div class=\"text\">{getDisplayTime(image.insertTime)}</div>\n    </div>\n    <div>\n      <IconButton\n        on:click={() => page('/' + backUrl + '#:~:text=' + encodeURIComponent(image.imageTitle))}\n        class=\"lurinsnavicons material-icons\"\n        aria-label=\"Open map\">\n        close\n      </IconButton>\n\n      <IconButton\n        on:click={() => page('/map?key=' + image.key)}\n        class=\"lurinsnavicons material-icons\"\n        aria-label=\"Open map\">\n        place\n      </IconButton>\n      <IconButton\n        on:click={toggleZoom}\n        class=\"lurinsnavicons material-icons\"\n        aria-label=\"Toggle zoom\">\n        aspect_ratio\n      </IconButton>\n\n      {#if canShare}\n        <IconButton\n          on:click={shareImage}\n          class=\"lurinsnavicons material-icons\"\n          aria-label=\"Back\">\n          share\n        </IconButton>\n      {:else}\n        <IconButton\n          class=\"lurinsnavicons material-icons\"\n          aria-label=\"placeholder\">\n          _\n        </IconButton>\n      {/if}\n    </div>\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}