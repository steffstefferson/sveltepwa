!function(){"use strict";try{self["workbox:core:5.1.2"]&&_()}catch(e){}const e={"invalid-value":({paramName:e,validValueDescription:t,value:a})=>{if(!e||!t)throw new Error("Unexpected input to 'invalid-value' error.");return`The '${e}' parameter was given a value with an `+`unexpected value. ${t} Received a value of `+`${JSON.stringify(a)}.`},"not-in-sw":({moduleName:e})=>{if(!e)throw new Error("Unexpected input to 'not-in-sw' error.");return`The '${e}' must be used in a service worker.`},"not-an-array":({moduleName:e,className:t,funcName:a,paramName:r})=>{if(!(e&&t&&a&&r))throw new Error("Unexpected input to 'not-an-array' error.");return`The parameter '${r}' passed into `+`'${e}.${t}.${a}()' must be an array.`},"incorrect-type":({expectedType:e,paramName:t,moduleName:a,className:r,funcName:n})=>{if(!(e&&t&&a&&n))throw new Error("Unexpected input to 'incorrect-type' error.");return`The parameter '${t}' passed into `+`'${a}.${r?r+".":""}`+`${n}()' must be of type ${e}.`},"incorrect-class":({expectedClass:e,paramName:t,moduleName:a,className:r,funcName:n,isReturnValueProblem:s})=>{if(!e||!a||!n)throw new Error("Unexpected input to 'incorrect-class' error.");return s?"The return value from "+`'${a}.${r?r+".":""}${n}()' `+`must be an instance of class ${e.name}.`:`The parameter '${t}' passed into `+`'${a}.${r?r+".":""}${n}()' `+`must be an instance of class ${e.name}.`},"missing-a-method":({expectedMethod:e,paramName:t,moduleName:a,className:r,funcName:n})=>{if(!(e&&t&&a&&r&&n))throw new Error("Unexpected input to 'missing-a-method' error.");return`${a}.${r}.${n}() expected the `+`'${t}' parameter to expose a '${e}' method.`},"add-to-cache-list-unexpected-type":({entry:e})=>"An unexpected entry was passed to 'workbox-precaching.PrecacheController.addToCacheList()' The entry "+`'${JSON.stringify(e)}' isn't supported. You must supply an array of `+"strings with one or more characters, objects with a url property or Request objects.","add-to-cache-list-conflicting-entries":({firstEntry:e,secondEntry:t})=>{if(!e||!t)throw new Error("Unexpected input to 'add-to-cache-list-duplicate-entries' error.");return"Two of the entries passed to 'workbox-precaching.PrecacheController.addToCacheList()' had the URL "+`${e._entryId} but different revision details. Workbox is `+"is unable to cache and version the asset correctly. Please remove one of the entries."},"plugin-error-request-will-fetch":({thrownError:e})=>{if(!e)throw new Error("Unexpected input to 'plugin-error-request-will-fetch', error.");return"An error was thrown by a plugins 'requestWillFetch()' method. "+`The thrown error message was: '${e.message}'.`},"invalid-cache-name":({cacheNameId:e,value:t})=>{if(!e)throw new Error("Expected a 'cacheNameId' for error 'invalid-cache-name'");return"You must provide a name containing at least one character for "+`setCacheDetails({${e}: '...'}). Received a value of `+`'${JSON.stringify(t)}'`},"unregister-route-but-not-found-with-method":({method:e})=>{if(!e)throw new Error("Unexpected input to 'unregister-route-but-not-found-with-method' error.");return"The route you're trying to unregister was not  previously "+`registered for the method type '${e}'.`},"unregister-route-route-not-registered":()=>"The route you're trying to unregister was not previously registered.","queue-replay-failed":({name:e})=>`Replaying the background sync queue '${e}' failed.`,"duplicate-queue-name":({name:e})=>`The Queue name '${e}' is already being used. `+"All instances of backgroundSync.Queue must be given unique names.","expired-test-without-max-age":({methodName:e,paramName:t})=>`The '${e}()' method can only be used when the `+`'${t}' is used in the constructor.`,"unsupported-route-type":({moduleName:e,className:t,funcName:a,paramName:r})=>`The supplied '${r}' parameter was an unsupported type. `+`Please check the docs for ${e}.${t}.${a} for `+"valid input types.","not-array-of-class":({value:e,expectedClass:t,moduleName:a,className:r,funcName:n,paramName:s})=>`The supplied '${s}' parameter must be an array of `+`'${t}' objects. Received '${JSON.stringify(e)},'. `+`Please check the call to ${a}.${r}.${n}() `+"to fix the issue.","max-entries-or-age-required":({moduleName:e,className:t,funcName:a})=>"You must define either config.maxEntries or config.maxAgeSeconds"+`in ${e}.${t}.${a}`,"statuses-or-headers-required":({moduleName:e,className:t,funcName:a})=>"You must define either config.statuses or config.headers"+`in ${e}.${t}.${a}`,"invalid-string":({moduleName:e,funcName:t,paramName:a})=>{if(!a||!e||!t)throw new Error("Unexpected input to 'invalid-string' error.");return`When using strings, the '${a}' parameter must start with `+"'http' (for cross-origin matches) or '/' (for same-origin matches). "+`Please see the docs for ${e}.${t}() for `+"more info."},"channel-name-required":()=>"You must provide a channelName to construct a BroadcastCacheUpdate instance.","invalid-responses-are-same-args":()=>"The arguments passed into responsesAreSame() appear to be invalid. Please ensure valid Responses are used.","expire-custom-caches-only":()=>"You must provide a 'cacheName' property when using the expiration plugin with a runtime caching strategy.","unit-must-be-bytes":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'unit-must-be-bytes' error.");return"The 'unit' portion of the Range header must be set to 'bytes'. "+`The Range header provided was "${e}"`},"single-range-only":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'single-range-only' error.");return"Multiple ranges are not supported. Please use a  single start value, and optional end value. The Range header provided was "+`"${e}"`},"invalid-range-values":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'invalid-range-values' error.");return"The Range header is missing both start and end values. At least one of those values is needed. The Range header provided was "+`"${e}"`},"no-range-header":()=>"No Range header was found in the Request provided.","range-not-satisfiable":({size:e,start:t,end:a})=>`The start (${t}) and end (${a}) values in the Range are `+`not satisfiable by the cached response, which is ${e} bytes.`,"attempt-to-cache-non-get-request":({url:e,method:t})=>`Unable to cache '${e}' because it is a '${t}' request and `+"only 'GET' requests can be cached.","cache-put-with-no-response":({url:e})=>`There was an attempt to cache '${e}' but the response was not `+"defined.","no-response":({url:e,error:t})=>{let a=`The strategy could not generate a response for '${e}'.`;return t&&(a+=` The underlying error is ${t}.`),a},"bad-precaching-response":({url:e,status:t})=>`The precaching request for '${e}' failed with an HTTP `+`status of ${t}.`,"non-precached-url":({url:e})=>`createHandlerBoundToURL('${e}') was called, but that URL is `+"not precached. Please pass in a URL that is precached instead.","add-to-cache-list-conflicting-integrities":({url:e})=>"Two of the entries passed to 'workbox-precaching.PrecacheController.addToCacheList()' had the URL "+`${e} with different integrity values. Please remove one of them.`,"missing-precache-entry":({cacheName:e,url:t})=>`Unable to find a precached response in ${e} for ${t}.`},t=(t,a={})=>{const r=e[t];if(!r)throw new Error(`Unable to find message for code '${t}'.`);return r(a)};class a extends Error{constructor(e,a){super(t(e,a)),this.name=e,this.details=a}}const r={hasMethod:(e,t,r)=>{if("function"!=typeof e[t])throw r.expectedMethod=t,new a("missing-a-method",r)},isArray:(e,t)=>{if(!Array.isArray(e))throw new a("not-an-array",t)},isInstance:(e,t,r)=>{if(!(e instanceof t))throw r.expectedClass=t,new a("incorrect-class",r)},isOneOf:(e,t,r)=>{if(!t.includes(e))throw r.validValueDescription=`Valid values are ${JSON.stringify(t)}.`,new a("invalid-value",r)},isSWEnv:e=>{if(!("ServiceWorkerGlobalScope"in self))throw new a("not-in-sw",{moduleName:e})},isType:(e,t,r)=>{if(typeof e!==t)throw r.expectedType=t,new a("incorrect-type",r)},isArrayOfClass:(e,t,r)=>{const n=new a("not-array-of-class",r);if(!Array.isArray(e))throw n;for(const a of e)if(!(a instanceof t))throw n}},n={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},s=e=>[n.prefix,e,n.suffix].filter(e=>e&&e.length>0).join("-"),o={updateDetails:e=>{(e=>{for(const t of Object.keys(n))e(t)})(t=>{"string"==typeof e[t]&&(n[t]=e[t])})},getGoogleAnalyticsName:e=>e||s(n.googleAnalytics),getPrecacheName:e=>e||s(n.precache),getPrefix:()=>n.prefix,getRuntimeName:e=>e||s(n.runtime),getSuffix:()=>n.suffix},i=(()=>{"__WB_DISABLE_DEV_LOGS"in self||(self.__WB_DISABLE_DEV_LOGS=!1);let e=!1;const t={debug:"#7f8c8d",log:"#2ecc71",warn:"#f39c12",error:"#c0392b",groupCollapsed:"#3498db",groupEnd:null},a=function(a,r){if(self.__WB_DISABLE_DEV_LOGS)return;if("groupCollapsed"===a&&/^((?!chrome|android).)*safari/i.test(navigator.userAgent))return void console[a](...r);const n=e?[]:["%cworkbox",[`background: ${t[a]}`,"border-radius: 0.5em","color: white","font-weight: bold","padding: 2px 0.5em"].join(";")];console[a](...n,...r),"groupCollapsed"===a&&(e=!0),"groupEnd"===a&&(e=!1)},r={},n=Object.keys(t);for(const e of n){const t=e;r[t]=((...e)=>{a(t,e)})}return r})(),c=new Set;const u=e=>{return new URL(String(e),location.href).href.replace(new RegExp(`^${location.origin}`),"")},l=(e,t)=>e.filter(e=>t in e),h=async({request:e,mode:t,plugins:a=[]})=>{const n=l(a,"cacheKeyWillBeUsed");let s=e;for(const e of n)"string"==typeof(s=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:s}))&&(s=new Request(s)),r.isInstance(s,Request,{moduleName:"Plugin",funcName:"cacheKeyWillBeUsed",isReturnValueProblem:!0});return s},d=async({cacheName:e,request:t,event:a,matchOptions:n,plugins:s=[]})=>{const o=await self.caches.open(e),c=await h({plugins:s,request:t,mode:"read"});let u=await o.match(c,n);u?i.debug(`Found a cached response in '${e}'.`):i.debug(`No cached response found in '${e}'.`);for(const t of s)if("cachedResponseWillBeUsed"in t){const s=t.cachedResponseWillBeUsed;(u=await s.call(t,{cacheName:e,event:a,matchOptions:n,cachedResponse:u,request:c}))&&r.isInstance(u,Response,{moduleName:"Plugin",funcName:"cachedResponseWillBeUsed",isReturnValueProblem:!0})}return u},p={put:async({cacheName:e,request:t,response:n,event:s,plugins:o=[],matchOptions:p})=>{if(t.method&&"GET"!==t.method)throw new a("attempt-to-cache-non-get-request",{url:u(t.url),method:t.method});const m=await h({plugins:o,request:t,mode:"write"});if(!n)throw i.error("Cannot cache non-existent response for "+`'${u(m.url)}'.`),new a("cache-put-with-no-response",{url:u(m.url)});const g=await(async({request:e,response:t,event:a,plugins:n=[]})=>{let s=t,o=!1;for(const t of n)if("cacheWillUpdate"in t){o=!0;const n=t.cacheWillUpdate;if((s=await n.call(t,{request:e,response:s,event:a}))&&r.isInstance(s,Response,{moduleName:"Plugin",funcName:"cacheWillUpdate",isReturnValueProblem:!0}),!s)break}return o||(s&&200!==s.status&&(0===s.status?i.warn(`The response for '${e.url}' is an opaque `+"response. The caching strategy that you're using will not cache opaque responses by default."):i.debug(`The response for '${e.url}' returned `+`a status code of '${t.status}' and won't be cached as a `+"result.")),s=s&&200===s.status?s:void 0),s||null})({event:s,plugins:o,response:n,request:m});if(!g)return void i.debug(`Response '${u(m.url)}' will `+"not be cached.",g);const f=await self.caches.open(e),w=l(o,"cacheDidUpdate"),y=w.length>0?await d({cacheName:e,matchOptions:p,request:m}):null;i.debug(`Updating the '${e}' cache with a new Response for `+`${u(m.url)}.`);try{await f.put(m,g)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){i.log(`About to run ${c.size} `+"callbacks to clean up caches.");for(const e of c)await e(),i.log(e,"is complete.");i.log("Finished running callbacks.")}(),e}for(const t of w)await t.cacheDidUpdate.call(t,{cacheName:e,event:s,oldResponse:y,newResponse:g,request:m})},match:d},m={fetch:async({request:e,fetchOptions:t,event:n,plugins:s=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const t=await n.preloadResponse;if(t)return i.log("Using a preloaded navigation response for "+`'${u(e.url)}'`),t}r.isInstance(e,Request,{paramName:"request",expectedClass:Request,moduleName:"workbox-core",className:"fetchWrapper",funcName:"wrappedFetch"});const o=l(s,"fetchDidFail"),c=o.length>0?e.clone():null;try{for(const t of s)if("requestWillFetch"in t){const a=t.requestWillFetch,s=e.clone();(e=await a.call(t,{request:s,event:n}))&&r.isInstance(e,Request,{moduleName:"Plugin",funcName:"cachedResponseWillBeUsed",isReturnValueProblem:!0})}}catch(e){throw new a("plugin-error-request-will-fetch",{thrownError:e})}const h=e.clone();try{let a;a="navigate"===e.mode?await fetch(e):await fetch(e,t),i.debug("Network request for "+`'${u(e.url)}' returned a response with `+`status '${a.status}'.`);for(const e of s)"fetchDidSucceed"in e&&(a=await e.fetchDidSucceed.call(e,{event:n,request:h,response:a}))&&r.isInstance(a,Response,{moduleName:"Plugin",funcName:"fetchDidSucceed",isReturnValueProblem:!0});return a}catch(t){i.error("Network request for "+`'${u(e.url)}' threw an error.`,t);for(const e of o)await e.fetchDidFail.call(e,{error:t,event:n,originalRequest:c.clone(),request:h.clone()});throw t}}};try{self["workbox:strategies:5.1.2"]&&_()}catch(e){}const g={strategyStart:(e,t)=>`Using ${e} to respond to '${u(t.url)}'`,printFinalResponse:e=>{e&&(i.groupCollapsed("View the final response here."),i.log(e||"[No response returned]"),i.groupEnd())}};class f{constructor(e,t,{onupgradeneeded:a,onversionchange:r}={}){this._db=null,this._name=e,this._version=t,this._onupgradeneeded=a,this._onversionchange=r||(()=>this.close())}get db(){return this._db}async open(){if(!this._db)return this._db=await new Promise((e,t)=>{let a=!1;setTimeout(()=>{a=!0,t(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const r=indexedDB.open(this._name,this._version);r.onerror=(()=>t(r.error)),r.onupgradeneeded=(e=>{a?(r.transaction.abort(),r.result.close()):"function"==typeof this._onupgradeneeded&&this._onupgradeneeded(e)}),r.onsuccess=(()=>{const t=r.result;a?t.close():(t.onversionchange=this._onversionchange.bind(this),e(t))})}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,a){return await this.getAllMatching(e,{query:t,count:a})}async getAllKeys(e,t,a){return(await this.getAllMatching(e,{query:t,count:a,includeKeys:!0})).map(e=>e.key)}async getAllMatching(e,{index:t,query:a=null,direction:r="next",count:n,includeKeys:s=!1}={}){return await this.transaction([e],"readonly",(o,i)=>{const c=o.objectStore(e),u=t?c.index(t):c,l=[],h=u.openCursor(a,r);h.onsuccess=(()=>{const e=h.result;e?(l.push(s?e:e.value),n&&l.length>=n?i(l):e.continue()):i(l)})})}async transaction(e,t,a){return await this.open(),await new Promise((r,n)=>{const s=this._db.transaction(e,t);s.onabort=(()=>n(s.error)),s.oncomplete=(()=>r()),a(s,e=>r(e))})}async _call(e,t,a,...r){return await this.transaction([t],a,(a,n)=>{const s=a.objectStore(t),o=s[e].apply(s,r);o.onsuccess=(()=>n(o.result))})}close(){this._db&&(this._db.close(),this._db=null)}}f.prototype.OPEN_TIMEOUT=2e3;const w={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[e,t]of Object.entries(w))for(const a of t)a in IDBObjectStore.prototype&&(f.prototype[a]=async function(t,...r){return await this._call(a,t,e,...r)});try{self["workbox:precaching:5.1.2"]&&_()}catch(e){}function y(e){e.data?console.log("This push event has data: ",e.data.text()):console.log("This push event has no data.");var t=function(e){try{return e.json()}catch(t){console.log("could not jsonize "+e.text(),t)}return{type:"message",title:"Lurin just like to say that he is watching you!",message:"",timestamp:new Date}}(e.data);if(t.type){var a=function(e){console.log("handle push msg:"+e.type);var t={url:"/home"};"newfact"!=e.type&&"randomfact"!=e.type||(t={url:"/facts?key="+e.itemKey});"newimage"!=e.type&&"randomimage"!=e.type||(t={url:"/images/slideShow?key="+e.itemKey});return{badge:"/images/logo192m.png",icon:"/images/logo192m.png",body:e.message,data:t,vibrate:[500,110,500],timestamp:e.timestamp}}(t);return{title:t.title,options:a}}console.log("This push event has no pushType.")}r.isSWEnv("workbox-precaching");try{self["workbox:routing:5.1.2"]&&_()}catch(e){}const N="GET",b=["DELETE","GET","HEAD","PATCH","POST","PUT"],R=e=>e&&"object"==typeof e?(r.hasMethod(e,"handle",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"handler"}),e):(r.isType(e,"function",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"handler"}),{handle:e});class v{constructor(e,t,a=N){r.isType(e,"function",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"match"}),a&&r.isOneOf(a,b,{paramName:"method"}),this.handler=R(t),this.match=e,this.method=a}}class $ extends v{constructor(e,t,a){r.isInstance(e,RegExp,{moduleName:"workbox-routing",className:"RegExpRoute",funcName:"constructor",paramName:"pattern"});super(({url:t})=>{const a=e.exec(t.href);if(a){if(t.origin===location.origin||0===a.index)return a.slice(1);i.debug(`The regular expression '${e}' only partially matched `+`against the cross-origin URL '${t}'. RegExpRoute's will only `+"handle cross-origin requests if they match the entire URL.")}},t,a)}}class x{constructor(){this._routes=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,a=this.handleRequest({request:t,event:e});a&&e.respondWith(a)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data;i.debug("Caching URLs from the window",t.urlsToCache);const a=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(a),e.ports&&e.ports[0]&&a.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){r.isInstance(e,Request,{moduleName:"workbox-routing",className:"Router",funcName:"handleRequest",paramName:"options.request"});const a=new URL(e.url,location.href);if(!a.protocol.startsWith("http"))return void i.debug("Workbox Router only supports URLs that start with 'http'.");const{params:n,route:s}=this.findMatchingRoute({url:a,request:e,event:t});let o=s&&s.handler;const c=[];if(o&&(c.push(["Found a route to handle this request:",s]),n&&c.push(["Passing the following params to the route's handler:",n])),!o&&this._defaultHandler&&(c.push("Failed to find a matching route. Falling back to the default handler."),o=this._defaultHandler),!o)return void i.debug(`No route found for: ${u(a)}`);let l;i.groupCollapsed(`Router is responding to: ${u(a)}`),c.forEach(e=>{Array.isArray(e)?i.log(...e):i.log(e)}),i.groupEnd();try{l=o.handle({url:a,request:e,event:t,params:n})}catch(e){l=Promise.reject(e)}return l instanceof Promise&&this._catchHandler&&(l=l.catch(r=>(i.groupCollapsed("Error thrown when responding to: "+` ${u(a)}. Falling back to Catch Handler.`),i.error("Error thrown by:",s),i.error(r),i.groupEnd(),this._catchHandler.handle({url:a,request:e,event:t})))),l}findMatchingRoute({url:e,request:t,event:a}){r.isInstance(e,URL,{moduleName:"workbox-routing",className:"Router",funcName:"findMatchingRoute",paramName:"options.url"}),r.isInstance(t,Request,{moduleName:"workbox-routing",className:"Router",funcName:"findMatchingRoute",paramName:"options.request"});const n=this._routes.get(t.method)||[];for(const r of n){let n;const s=r.match({url:e,request:t,event:a});if(s)return n=s,Array.isArray(s)&&0===s.length?n=void 0:s.constructor===Object&&0===Object.keys(s).length?n=void 0:"boolean"==typeof s&&(n=void 0),{route:r,params:n}}return{}}setDefaultHandler(e){this._defaultHandler=R(e)}setCatchHandler(e){this._catchHandler=R(e)}registerRoute(e){r.isType(e,"object",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),r.hasMethod(e,"match",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),r.isType(e.handler,"object",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),r.hasMethod(e.handler,"handle",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route.handler"}),r.isType(e.method,"string",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route.method"}),this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new a("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(!(t>-1))throw new a("unregister-route-route-not-registered");this._routes.get(e.method).splice(t,1)}}let q;const E=()=>(q||((q=new x).addFetchListener(),q.addCacheListener()),q);function T(e,t,r){let n;if("string"==typeof e){const s=new URL(e,location.href);{if(!e.startsWith("/")&&!e.startsWith("http"))throw new a("invalid-string",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});const t=e.startsWith("http")?s.pathname:e,r="[*:?+]";new RegExp(`${r}`).exec(t)&&i.debug("The '$capture' parameter contains an Express-style wildcard "+`character (${r}). Strings are now always interpreted as `+"exact matches; use a RegExp for partial or wildcard matches.")}n=new v(({url:t})=>(t.pathname===s.pathname&&t.origin!==s.origin&&i.debug(`${e} only partially matches the cross-origin URL `+`${t}. This route will only handle cross-origin requests `+"if they match the entire URL."),t.href===s.href),t,r)}else if(e instanceof RegExp)n=new $(e,t,r);else if("function"==typeof e)n=new v(e,t,r);else{if(!(e instanceof v))throw new a("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});n=e}return E().registerRoute(n),n}try{self["workbox:range-requests:5.1.2"]&&_()}catch(e){}async function k(e,t){try{if(r.isInstance(e,Request,{moduleName:"workbox-range-requests",funcName:"createPartialResponse",paramName:"request"}),r.isInstance(t,Response,{moduleName:"workbox-range-requests",funcName:"createPartialResponse",paramName:"originalResponse"}),206===t.status)return t;const n=e.headers.get("range");if(!n)throw new a("no-range-header");const s=function(e){r.isType(e,"string",{moduleName:"workbox-range-requests",funcName:"parseRangeHeader",paramName:"rangeHeader"});const t=e.trim().toLowerCase();if(!t.startsWith("bytes="))throw new a("unit-must-be-bytes",{normalizedRangeHeader:t});if(t.includes(","))throw new a("single-range-only",{normalizedRangeHeader:t});const n=/(\d*)-(\d*)/.exec(t);if(!n||!n[1]&&!n[2])throw new a("invalid-range-values",{normalizedRangeHeader:t});return{start:""===n[1]?void 0:Number(n[1]),end:""===n[2]?void 0:Number(n[2])}}(n),o=await t.blob(),c=function(e,t,n){r.isInstance(e,Blob,{moduleName:"workbox-range-requests",funcName:"calculateEffectiveBoundaries",paramName:"blob"});const s=e.size;if(n&&n>s||t&&t<0)throw new a("range-not-satisfiable",{size:s,end:n,start:t});let o,i;return void 0!==t&&void 0!==n?(o=t,i=n+1):void 0!==t&&void 0===n?(o=t,i=s):void 0!==n&&void 0===t&&(o=s-n,i=s),{start:o,end:i}}(o,s.start,s.end),u=o.slice(c.start,c.end),l=u.size,h=new Response(u,{status:206,statusText:"Partial Content",headers:t.headers});return h.headers.set("Content-Length",String(l)),h.headers.set("Content-Range",`bytes ${c.start}-${c.end-1}/`+o.size),h}catch(a){return i.warn("Unable to construct a partial response; returning a 416 Range Not Satisfiable response instead."),i.groupCollapsed("View details here."),i.log(a),i.log(e),i.log(t),i.groupEnd(),new Response("",{status:416,statusText:"Range Not Satisfiable"})}}T(/\.(?:png|jpg|jpeg|svg|gif)$/,new class{constructor(e={}){this._cacheName=o.getRuntimeName(e.cacheName),this._plugins=e.plugins||[],this._fetchOptions=e.fetchOptions,this._matchOptions=e.matchOptions}async handle({event:e,request:t}){const n=[];"string"==typeof t&&(t=new Request(t)),r.isInstance(t,Request,{moduleName:"workbox-strategies",className:"CacheFirst",funcName:"makeRequest",paramName:"request"});let s,o=await p.match({cacheName:this._cacheName,request:t,event:e,matchOptions:this._matchOptions,plugins:this._plugins});if(o)n.push(`Found a cached response in the '${this._cacheName}' cache.`);else{n.push(`No response found in the '${this._cacheName}' cache. `+"Will respond with a network request.");try{o=await this._getFromNetwork(t,e)}catch(e){s=e}o?n.push("Got response from network."):n.push("Unable to get a response from the network.")}i.groupCollapsed(g.strategyStart("CacheFirst",t));for(const e of n)i.log(e);if(g.printFinalResponse(o),i.groupEnd(),!o)throw new a("no-response",{url:t.url,error:s});return o}async _getFromNetwork(e,t){const a=await m.fetch({request:e,event:t,fetchOptions:this._fetchOptions,plugins:this._plugins}),r=a.clone(),n=p.put({cacheName:this._cacheName,request:e,response:r,event:t,plugins:this._plugins});if(t)try{t.waitUntil(n)}catch(t){i.warn("Unable to ensure service worker stays alive when "+`updating cache for '${u(e.url)}'.`)}return a}}({cacheName:"my-image-cache"}));const U=new class{constructor(e={}){this._cacheName=o.getRuntimeName(e.cacheName),this._plugins=e.plugins||[],this._matchOptions=e.matchOptions}async handle({event:e,request:t}){"string"==typeof t&&(t=new Request(t)),r.isInstance(t,Request,{moduleName:"workbox-strategies",className:"CacheOnly",funcName:"makeRequest",paramName:"request"});const n=await p.match({cacheName:this._cacheName,request:t,event:e,matchOptions:this._matchOptions,plugins:this._plugins});if(i.groupCollapsed(g.strategyStart("CacheOnly",t)),n?(i.log(`Found a cached response in the '${this._cacheName}'`+" cache."),g.printFinalResponse(n)):i.log(`No response found in the '${this._cacheName}' cache.`),i.groupEnd(),!n)throw new a("no-response",{url:t.url});return n}}({cacheName:"webShareMediaCache",plugins:[new class{constructor(){this.cachedResponseWillBeUsed=(async({request:e,cachedResponse:t})=>t&&e.headers.has("range")?await k(e,t):t)}}]});self.addEventListener("install",()=>self.skipWaiting()),self.addEventListener("activate",()=>self.clients.claim()),T("/_share-target",async({event:e})=>{broadcastChannel&&broadcastChannel.postMessage("Saving media locally...");const t=(await e.request.formData()).getAll("media"),a=await caches.open("webShareMediaCache");for(const e of t)e.name?await a.put(`${urlPrefix}${Date.now()}-${e.name}`,new Response(e,{headers:{"content-length":e.size,"content-type":e.type}})):broadcastChannel&&broadcastChannel.postMessage("Sorry! No name found on incoming media.");return Response.redirect("/images?shareTarget",303)},"POST"),T(new RegExp("/_media/"),U),self.addEventListener("push",function(e){var t=y(e);e.waitUntil(self.registration.showNotification(t.title,t.options))})}();
//# sourceMappingURL=service-worker.js.map
